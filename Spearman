Spearmanâ€™s Rank coefficient

//Program

#include <iostream>

using namespace std;

// Function to perform bubble sort and calculate ranks

void calculateRanks(double data[], int n, int ranks[]) {

 // Create arrays to store data and original indices

 double sortedData[n];

 int indices[n];

 for (int i = 0; i < n; i++) { // Copy data and indices

 sortedData[i] = data[i];

 indices[i] = i;

 }

 // Bubble sort to sort the data and keep track of indices

 for (int i = 0; i < n - 1; i++) {

 for (int j = 0; j < n - i - 1; j++) {

 if (sortedData[j] > sortedData[j + 1]) {

 // Swap data

 double temp = sortedData[j];

 sortedData[j] = sortedData[j + 1];

 sortedData[j + 1] = temp;

 // Swap indices

 int tempIndex = indices[j];

 indices[j] = indices[j + 1];

 indices[j + 1] = tempIndex;

 }

 }

 }

 for (int i = 0; i < n; i++) { // Assign ranks based on sorted order

 ranks[indices[i]] = i + 1; // Assign rank

 }

}

// Function to calculate Spearman's rank correlation coefficient

double spearmanRankCorrelation(double x[], double y[], int n) {

 int rankX[n], rankY[n];

 calculateRanks(x, n, rankX);

 calculateRanks(y, n, rankY);

 double dSquaredSum = 0;

 for (int i = 0; i < n; i++) {

 double d = rankX[i] - rankY[i];

 dSquaredSum += d * d;
}

 // Calculate Spearman's rank correlation coefficient

 return 1 - (6 * dSquaredSum) / (n * (n * n - 1));

}

int main() {

 int n;

 cout << "Enter the number of elements in the datasets: ";

 cin >> n;

 if (n <= 0) {

 cout << "Error: The number of elements must be greater than zero." << endl;

 return 1;

 }

 double x[n], y[n];

 cout << "Enter the elements of the first dataset (x): ";

 for (int i = 0; i < n; i++) {

 cin >> x[i];

 }

 cout << "Enter the elements of the second dataset (y): ";

 for (int i = 0; i < n; i++) {

 cin >> y[i];

 }

 // Calculate the correlation

 double correlation = spearmanRankCorrelation(x, y, n);

 cout << "Spearman's Rank Correlation Coefficient: " << correlation << endl;

 return 0;

}
